<ToggleButton x:Name="userControl" x:Class="Digital_Indicator.Infrastructure.UI.Controls.MachineCarriageView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Digital_Indicator.Infrastructure.UI.Controls"
             xmlns:paramClasses="clr-namespace:Digital_Indicator.Infrastructure.UI.ControlBase;assembly=Digital_Indicator.Infrastructure.UI"
              xmlns:ed="http://schemas.microsoft.com/expression/2010/drawing" 
             mc:Ignorable="d" 
             d:DesignHeight="67" d:DesignWidth="67" Height="67" Width="75"  
              Background="Gray" Style="{DynamicResource ToggleButtonStyle1}" IsChecked="{Binding IsSelected}"
              >
    <ToggleButton.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <Style x:Key="SelectableControlStyle" TargetType="{x:Type Border}">
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="LightBlue"/>
                    <Setter Property="Opacity" Value="75"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FFD6D3D3"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#b3b3b3"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFD6D3D3"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#808080"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="Snow"/>
        <Style x:Key="ToggleButtonStyle1" TargetType="{x:Type ToggleButton}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="8"/>
                            </Grid.ColumnDefinitions>
                            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true" CornerRadius="3">
                                <Grid >
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <TextBlock x:Name="textBlock" TextWrapping="Wrap" Text="{Binding ParameterName, FallbackValue=Toggle Settings}" HorizontalAlignment="Center" Foreground="Snow" VerticalAlignment="Center" Grid.RowSpan="3"  />
                                    <ed:BlockArrow x:Name="blockArrow" Fill="#FFEA0303" Height="11.333" Margin="0" Orientation="Left" Stroke="Black" Width="12.667" Grid.Row="0" VerticalAlignment="Top" HorizontalAlignment="Left" StrokeThickness="0.8" Visibility="{Binding LinkedArrowLeft, Converter={StaticResource BooleanToVisibilityConverter}}"   />
                                    <ed:BlockArrow Fill="#FFEA0303" Height="11.333" Orientation="Right" Grid.RowSpan="1" Stroke="Black" Width="12.667" Grid.Row="0" HorizontalAlignment="Right" VerticalAlignment="Top"  StrokeThickness="0.8" Visibility="{Binding LinkedArrowRight, Converter={StaticResource BooleanToVisibilityConverter}}"/>

                                </Grid>
                            </Border>
                            <Rectangle Fill="#FFEA0303" Grid.RowSpan="1" Height="6.083" Margin="0,4.625,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" Width="16.75" Visibility="{Binding LinkedBarLeft, Converter={StaticResource BooleanToVisibilityConverter}}" />
                            <Rectangle x:Name="rectangle" Fill="#FFEA0303" Grid.RowSpan="1" Height="6.083" Margin="-17.75,4.625,0,0" VerticalAlignment="Top" HorizontalAlignment="Stretch" Width="Auto" Grid.Column="1"  Visibility="{Binding LinkedBarRight, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                            <Rectangle x:Name="rectangle1" Fill="#FFEA0303" Grid.RowSpan="1" Margin="14.7,4.625,14.75,0" Height="6.083" VerticalAlignment="Top" Visibility="{Binding LinkedCenter, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Button.IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="Opacity" TargetName="border" Value="25" />
                                <!--<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>-->
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <!--<Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>-->
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Storyboard x:Key="SelectableControlStoryboard">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="userControl">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
    </ToggleButton.Resources>
    <ToggleButton.Triggers>
        <EventTrigger RoutedEvent="FrameworkElement.Loaded">
            <BeginStoryboard Storyboard="{StaticResource SelectableControlStoryboard}"/>
        </EventTrigger>
    </ToggleButton.Triggers>

    
            <!--<ToggleButton Background="Gray" Style="{DynamicResource ToggleButtonStyle1}">
                <TextBlock x:Name="textBlock" TextWrapping="Wrap" Text="Toggle Settings" HorizontalAlignment="Center" Foreground="Snow" Grid.Row="1" />
            </ToggleButton>-->
            
</ToggleButton>

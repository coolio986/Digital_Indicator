<UserControl
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:Digital_Indicator.Module.Display.Views"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:fa="clr-namespace:FontAwesome.WPF;assembly=FontAwesome.WPF"
             xmlns:oxy="http://oxyplot.org/wpf"
             xmlns:prism="http://prismlibrary.com/"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
             x:Name="userControl" x:Class="Digital_Indicator.Module.Display.Views.DiameterView"
             mc:Ignorable="d" 
             d:DesignHeight="600" d:DesignWidth="800"
             prism:ViewModelLocator.AutoWireViewModel="True"  >
    <UserControl.Resources>
        <Storyboard x:Key="Storyboard_Slide_Settings_Out">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="contentPresenter">
                <EasingDoubleKeyFrame KeyTime="0" Value="-300">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <ExponentialEase EasingMode="EaseInOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CircleEase EasingMode="EaseInOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>

        </Storyboard>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <SolidColorBrush x:Key="Button.IsChecked.Background" Color="#00ff00"/>
        <Style x:Key="StartCaptureButtonStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Button.IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.IsChecked.Background}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <UserControl.Triggers>
        <EventTrigger RoutedEvent="FrameworkElement.Loaded" SourceName="contentPresenter"/>
    </UserControl.Triggers>
    <i:Interaction.Triggers>
        <ei:DataTrigger Binding="{Binding SettingsView}" Comparison="NotEqual" Value="null">
            <ei:ControlStoryboardAction x:Name="ControlStoryboardAction_SlideOut" Storyboard="{StaticResource Storyboard_Slide_Settings_Out}"/>
        </ei:DataTrigger>
    </i:Interaction.Triggers>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="0.5*"/>
            <ColumnDefinition/>
            <ColumnDefinition/>
            <ColumnDefinition/>
            <ColumnDefinition/>
            <ColumnDefinition/>
            <ColumnDefinition/>
            <ColumnDefinition/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <Grid Grid.ColumnSpan="9" Grid.RowSpan="9" Panel.ZIndex="1000" Width="300" HorizontalAlignment="Left">
            <ContentPresenter x:Name="contentPresenter" Content="{Binding SettingsView}" HorizontalAlignment="Left" RenderTransformOrigin="0.5,0.5" >
                <ContentPresenter.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform/>
                        <TranslateTransform/>
                    </TransformGroup>
                </ContentPresenter.RenderTransform>
            </ContentPresenter>

        </Grid>
        <Grid Grid.RowSpan="2">
            <Border BorderThickness="0,0,1,0" BorderBrush="#FFA6A6A6">
                <StackPanel >
                    <Button MaxHeight="30" Margin="10,10,10,0" Command="{Binding Settings}" >
                        <fa:ImageAwesome Icon="Cog" Margin="0,2" />
                    </Button>
                </StackPanel>
            </Border>
        </Grid>
        <StackPanel Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="3" Grid.RowSpan="2">
            <Grid MaxWidth="250" HorizontalAlignment="Left">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="180"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Label Content="Diameter"  FontSize="26" HorizontalAlignment="Left" />
                <Label Content="{Binding Diameter}" Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="2" FontSize="26" HorizontalAlignment="Left"  />
            </Grid>
            <Grid MaxWidth="250" HorizontalAlignment="Left">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="180"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Label Content="Highest Value" FontSize="26" HorizontalAlignment="Left"/>
                <Label Content="{Binding HighestValue}" Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="2" FontSize="26" HorizontalAlignment="Right"  />
            </Grid>
            <Grid MaxWidth="250" HorizontalAlignment="Left">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="180"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Label Content="Lowest Value" FontSize="26" HorizontalAlignment="Left"/>
                <Label Content="{Binding LowestValue}" Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="2" FontSize="26" HorizontalAlignment="Right"  />
            </Grid>
        </StackPanel>
        <StackPanel Grid.Row="0" Grid.Column="4" Grid.ColumnSpan="3" Grid.RowSpan="2">
            <Grid MaxWidth="270" HorizontalAlignment="Left">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="200"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Label Content="Spool Number"  FontSize="26" HorizontalAlignment="Left" />
                <Label Content="{Binding SpoolNumber}" Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="2" FontSize="26" HorizontalAlignment="Right"  />
            </Grid>
            <Grid MaxWidth="270" HorizontalAlignment="Left">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="200"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Label Content="Batch Number"  FontSize="26" HorizontalAlignment="Left" />
                <Label Content="{Binding BatchNumber}" Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="2" FontSize="26" HorizontalAlignment="Right"  />
            </Grid>
        </StackPanel>
        <oxy:PlotView Model="{Binding HistoricalModel}" Grid.Column="0" Grid.Row="2" Grid.ColumnSpan="9" Grid.RowSpan="3"/>
        <oxy:PlotView Model="{Binding RealTimeModel}" Grid.Column="0" Grid.Row="6" Grid.ColumnSpan="9" Grid.RowSpan="3"/>

        <Grid Grid.Column="8" Margin="0,0,20,0" Grid.Row="0" Grid.RowSpan="2">
            <StackPanel>
                <ToggleButton Content="Start Capture" Command="{Binding StartCapture}" VerticalAlignment="Bottom"  MinHeight="45" Margin="0,0,0,10" IsChecked="{Binding CaptureStarted, Mode=OneWay}" Style="{DynamicResource StartCaptureButtonStyle}" />
                <Button Content="Stop Capture" Command="{Binding StopCapture}" VerticalAlignment="Bottom"  MinHeight="45" Margin="0,0,0,45" />
            </StackPanel>
        </Grid>

        <Grid Grid.Column="8" Grid.Row="0" Margin="0,0,20,-30" VerticalAlignment="Bottom" Grid.RowSpan="2">

            <Button Grid.ColumnSpan="2" Content="Reset Graph" Command="{Binding ResetGraph}" MinHeight="35"/>
        </Grid>

    </Grid>
</UserControl>
